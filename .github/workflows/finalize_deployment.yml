name: Finalize Deployment

on:
  workflow_dispatch:
    inputs:
      release_type:
        type: choice
        options:
        - major
        - minor
        - patch
        default: patch
        required: true

env:
  next_branch: 3.2_next
  preview_branch: 3.2_preview

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ env.preview_branch }}
      - uses: actions/setup-node@v3
        with:
          node-version: 14
      - env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm --no-git-tag-version version ${{ inputs.release_type }}
          git config user.name 'GitHub Action'
          git config user.email '<>'
          current_version=$(node -p "require('./package.json').version")
          rc_regex="s/\([[:digit:]]\.[[:digit:]]\.[[:digit:]]\)-rc\.[[:digit:]]/\1/p"
          release_version=$($current_version | sed -n $rc_regex)
          git checkout -f 'release/${current_version}'
          if git pull origin "release/${current_version}"; then
            npm --no-git-tag-version version $release_version
            git add .
            git commit -m "Prepare ${release_version}"
            git push origin "release/${current_version}"
            gh pr edit --title "Prepare $release_version"
          else
            echo "A deployment must be prepared before finalizing"
          fi
          
#Increases part of package.json version number by 1, based on the 'release_type' input
#npm --no-git-tag-version version ${{ inputs.release_type }}

#Gets the package.json version and stores it in the 'new_version' bash variable
#current_version=$(node -p "require('./package.json').version")

#Matches against #.#.#-rc.# where # are numbers
#rc_regex="s/\([[:digit:]]\.[[:digit:]]\.[[:digit:]]\)-rc\.[[:digit:]]/\1/p"

#Removes the -rc.# part of the version using the pattern above and stores it in the 'release_version' bash variable
#release_version=$($current_version | sed -n $rc_regex)     
