on: 
  workflow_dispatch:
    inputs:
      release_type:
        type: choice
        options:
        - major
        - minor
        - patch
        default: patch
        required: true
      is_final:
        type: boolean
        default: false
        required: true
env:
  next_branch: 3.2_next
  main_branch: 3.2_main
  preview_branch: 3.2_preview
  
jobs:
  setup:
    runs-on: ubuntu-latest
    env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ env.next_branch }}
      - uses: actions/setup-node@v3
      - run: |
            npm --no-git-tag-version version ${{ inputs.release_type }}
            echo "new_version=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
      - run: |
            git config user.name 'GitHub Action'
            git config user.email '<>'
            git checkout -fB 'release/${{ env.new_version }}'
            echo "release_version=$(node -p "require('./package.json').version" | sed -n 's/\([[:digit:]]\.[[:digit:]]\.[[:digit:]]\)-rc\.[[:digit:]]/\1/p')" >> $GITHUB_ENV
      - if: ${{ inputs.is_final == false }}
        run: |
          npm --no-git-tag-version --preid='rc' version prerelease
          git add .
          git commit -m "Prepare $(node -p "require('./package.json').version")"
          git status
          git push origin 'release/${{ env.new_version }}'
          gh pr create --title "Prepare $(node -p "require('./package.json').version")" --body '' -B "${{ env.preview_branch }}"
      - if: ${{ inputs.is_final == true }}
        run: |
          npm --no-git-tag-version version "${{ env.release_version }}"
          git add .
          git commit -m "Prepare ${{ env.release_version }}"
          git push origin 'release/${{ env.new_version }}'
          gh pr create --title "Prepare ${{ env.release_version }}" --body '' -B "${{ env.preview_branch }}"
