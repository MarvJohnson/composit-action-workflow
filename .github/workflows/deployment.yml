on: 
  workflow_dispatch:
    inputs:
      release_type:
        type: choice
        options:
        - major
        - minor
        - patch
        - final
        default: patch
        required: true

jobs:
  setup:
    runs-on: ubuntu-latest
    env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
      - run: |
          git pull --all
          echo "next_branch=$(echo $(echo $(git branch -lr 'origin/*.*_next' | sed -n 's/.*origin\/\([[:digit:]].[[:digit:]]\)_next/\1/p')))" >> $GITHUB_ENV
      - run: |
            git switch "${{ env.next_branch }}_next"
            npm --no-git-tag-version version ${{ inputs.release_type }}
            echo "new_version=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
      - run: |
            git config user.name 'GitHub Action'
            git config user.email '<>'
            git checkout -B 'release/${{ env.new_version }}'
            git reset --hard 'origin/release/${{ env.new_version }}' || echo "This is a new branch. Resetting isn't possible"
      - if: ${{ inputs.release_type != 'final' }}
        run: |
          npm --no-git-tag-version --preid='rc' version prerelease
          git add .
          git commit -m "Prepare $(node -p "require('./package.json').version")"
          git push origin 'release/${{ env.new_version }}'
          gh pr create --title "Prepare $(node -p "require('./package.json').version")" --body '' -B "${{ env.next_branch }}_preview"
      - if: ${{ inputs.release_type == 'final' }}
        # Get current version without preid and set the version, commit, and PR with it
        run: |
          npm --no-git-tag-version --preid='rc' version prerelease
          git add .
          git commit -m "Prepare $(node -p "require('./package.json').version")"
          git push origin 'release/${{ env.new_version }}'
          gh pr create --title "Prepare $(node -p "require('./package.json').version")" --body '' -B "${{ env.next_branch }}_preview"
            
